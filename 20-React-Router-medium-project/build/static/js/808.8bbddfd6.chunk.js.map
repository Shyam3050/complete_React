{"version":3,"file":"static/js/808.8bbddfd6.chunk.js","mappings":"4MACA,EAAuB,wB,SCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAaL,EAAMM,IAAK,+BAKtD,EChBA,EAAuB,wBAAvB,EAAyD,2BC6CzD,EA/BkB,SAACN,GACjB,IAVkBO,EAAQC,EAUpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAEXC,EAA+C,QADjC,IAAIC,gBAAgBH,EAASI,QACZC,IAAI,QACnCC,GAdYV,EAccP,EAAMO,OAdZC,EAcoBK,EAbvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAYA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKpB,UAAWC,EAAgB,UAC9B,oBAAQoB,QANd,WACEb,EAAQc,KAAK,GAAD,OAAIZ,EAASa,SAAQ,iBAASX,EAAmB,OAAS,OACxE,EAI4C,kBAC9BA,EAAmB,YAAc,kBAG3C,eAAIZ,UAAWC,EAAa,SACzBe,EAAaQ,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAIX,QAKZ,E,SC3CA,EAA2B,gCCY3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,cAAa,2BAK5C,E,kBCyBA,EA1BkB,WAChB,OAKIsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAJxBC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAU,EAAhBC,KACAC,EAAK,EAALA,MAMF,OAHAC,EAAAA,EAAAA,YAAU,WACZL,GACE,GAAE,CAACA,IACW,YAAXC,GACM,gBAAK7B,UAAU,WAAU,UAC7B,SAACkC,EAAA,EAAc,MAGjBF,GACM,gBAAKhC,UAAU,WAAU,SAC7BgC,IAGO,cAAXH,GAA4BC,GAAoC,IAAtBA,EAAWK,QAG/C,SAAC,EAAS,CAAC7B,OAAQwB,KAFnB,SAAC,EAAa,GAGvB,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__IRkfg\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View FullScreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__sjNWh\",\"sorting\":\"QuoteList_sorting__-ls32\"};","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortinAsending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortinAsending);\n\n  function changeSortingHandler() {\n    history.push(`${location.pathname}?sort=${isSortinAsending ? \"desc\" : \"asc\"}`);\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortinAsending ? \"Decending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__WJwOv\"};","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quotes'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nconst DUMMY_DATA = [\r\n  { id: \"q1\", author: \"max\", text: \"learning react is fun!\" },\r\n  { id: \"q2\", author: \"shyam\", text: \"learning javascript is great!\" },\r\n];\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedData,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(()=>{\r\nsendRequest()\r\n  },[sendRequest])\r\n  if(status === \"pending\"){\r\n    return <div className=\"centered\">\r\n       <LoadingSpinner/>\r\n    </div>\r\n  }\r\n  if(error){\r\n    return <div className=\"centered\">\r\n      {error}\r\n    </div>\r\n  }\r\nif(status === 'completed' && (!loadedData || loadedData.length === 0)){\r\n  return <NoQuotesFound />\r\n}\r\n  return <QuoteList quotes={loadedData} />;\r\n};\r\nexport default AllQuotes;\r\n"],"names":["props","className","classes","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortinAsending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedData","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}