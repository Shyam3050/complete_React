{"version":3,"file":"static/js/499.4e5b9238.chunk.js","mappings":"8NACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC8DnI,EAxDkB,SAACH,GACjB,OAAkCI,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAU,KAAEC,EAAW,KACxBC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAmBrB,OACE,iCACE,SAAC,KAAM,CAACE,KAAML,EAAYM,QAAS,iBAAM,gBAAgB,KACzD,SAAC,EAAI,WACH,kBACEV,UAAWC,EACXU,QAbR,WACEN,GAAY,EACd,EAYQO,SAxBR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBT,EAAeU,QAAQC,MACvCC,EAAcV,EAAaQ,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAeoC,UAE3BnB,EAAMuB,YACL,gBAAKtB,UAAWC,EAAgB,UAC9B,SAACsB,EAAA,EAAc,OAInB,iBAAKvB,UAAWC,EAAgB,WAC9B,kBAAOuB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKrB,QAEtC,iBAAKN,UAAWC,EAAgB,WAC9B,kBAAOuB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKnB,QAEpC,gBAAKR,UAAWC,EAAgB,UAC9B,mBAAQ4B,QA5BlB,WACExB,GAAY,EACd,EA0BkDL,UAAU,MAAK,gCAQnE,ECvCA,EAjBkB,WAChB,OAAgC8B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,MAWhB,OATAC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEjB,GAAG,CAACJ,EAAQC,KAMV,SAAC,EAAS,CAACZ,UAAsB,YAAXW,EAAsBd,WAJ9C,SAAyBmB,GACvBN,EAAYM,EACd,GAIF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__N2wXe\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__0-qg-\",\"loading\":\"QuoteForm_loading__WWsn-\",\"control\":\"QuoteForm_control__Agggd\",\"actions\":\"QuoteForm_actions__BBCZv\"};","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  function formFocusHandler() {\n    setEntering(true);\n  }\n  function finishEnteringHandler() {\n    setEntering(false);\n  }\n\n  return (\n    <>\n      <Prompt when={isEntering} message={() => \"Prompt Message\"} />\n      <Card>\n        <form\n          className={classes.form}\n          onFocus={formFocusHandler}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nconst NewQuotes = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  function addQuoteHandler(data) {\r\n    sendRequest(data);\r\n  }\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\nexport default NewQuotes;\r\n"],"names":["props","className","classes","children","useState","isEntering","setEntering","authorInputRef","useRef","textInputRef","when","message","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","data"],"sourceRoot":""}